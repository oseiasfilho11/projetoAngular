{"version":3,"file":"meta.d.ts","sources":["meta.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a meta element.\n *\n * @publicApi\n */\nexport declare type MetaDefinition = {\n    charset?: string;\n    content?: string;\n    httpEquiv?: string;\n    id?: string;\n    itemprop?: string;\n    name?: string;\n    property?: string;\n    scheme?: string;\n    url?: string;\n} & {\n    [prop: string]: string;\n};\n/**\n * Factory to create Meta service.\n */\nexport declare function createMeta(): Meta;\n/**\n * A service that can be used to get and add meta tags.\n *\n * @publicApi\n */\nexport declare class Meta {\n    private _doc;\n    private _dom;\n    constructor(_doc: any);\n    addTag(tag: MetaDefinition, forceCreation?: boolean): HTMLMetaElement | null;\n    addTags(tags: MetaDefinition[], forceCreation?: boolean): HTMLMetaElement[];\n    getTag(attrSelector: string): HTMLMetaElement | null;\n    getTags(attrSelector: string): HTMLMetaElement[];\n    updateTag(tag: MetaDefinition, selector?: string): HTMLMetaElement | null;\n    removeTag(attrSelector: string): void;\n    removeTagElement(meta: HTMLMetaElement): void;\n    private _getOrCreateElement;\n    private _setMetaElementAttributes;\n    private _parseSelector;\n    private _containsAttributes;\n}\n"]}